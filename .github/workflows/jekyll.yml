# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name   名字: Deploy Jekyll site to Pages

on   在:
  #针对默认分支推送运行# Runs on pushes targeting the default branch#针对默认分支推送运行
  push   推:
    branches   分支机构: ["main"   “主要”]

  #允许您从Actions选项卡手动运行此工作流# Allows you to run this workflow manually from the Actions tab#允许您从Actions选项卡手动运行此工作流
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages#设置GITHUB_TOKEN的权限，允许部署到GitHub页面
permissions   权限:
  contents   内容: read   内容:读
  pages   页面: write   页:写
  id-token: write   id-token:写

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.#只允许一个并发部署，跳过正在运行和最新队列之间的运行队列。
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.但是，不要取消正在进行的运行，因为我们希望这些生产部署能够完成。
concurrency   并发性:
  group   集团: "pages"   “页面”
  cancel-in-progress: false   假

jobs   工作:
  # Build job
  build:
    runs-on   运行在: ubuntu-latest   上运行:ubuntu-latest
    steps   步骤:
      - name   名字: Checkout   -名称：Checkout
        uses   使用: actions/checkout@v4用途:行动/ checkout@v4
      - name   名字: Setup Ruby
        # https://github.com/ruby/setup-ruby/releases/tag/v1.207.0
        uses   使用: ruby/setup-ruby@4a9ddd6f338a97768b8006bf671dfbad383215f4
        with   与:
          ruby-version: '3.1' # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 0 # Increment this number if you need to re-download cached gems
      - name   名字: Setup Pages   —name：设置页面
        id: pages
        uses   使用: actions/configure-pages@v5用途:行动/ configure-pages@v5
      - name   名字: Build with Jekyll
        # Outputs to the './_site' directory by default
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production
      - name   名字: Upload artifact   —name：上传工件
        # Automatically uploads an artifact from the './_site' directory by default
        uses   使用: actions/upload-pages-artifact@v3用途:行动/ upload-pages-artifact@v3

  # Deployment job
  deploy   部署:
    environment   环境:
      name   名字: github-pages   名称:github-pages
      url: $Url: ${{steps.deployment.output .page_url}}{{ steps.deployment.outputs.page_url }}
    runs-on   运行在: ubuntu-latest   上运行:ubuntu-latest
    needs: build
    steps   步骤:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
